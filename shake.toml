function = """
for k, v in ipairs(KEYS) do
if DB == 0
then
    return
end
    if not (string.find(v, "^core_user_token_list")
        or string.find(v, "^core_charm_fans_count:")
        or string.find(v, "^core_charm_follow_count:")
        or string.find(v, "^core_common_user_tag_level")
        or string.find(v, "^core_game_tbtguil")
        or string.find(v, "^c_s_c_c_")
        or string.find(v, "^u_c_t_t"))  then
        shake.call(DB, ARGV)
    end
end
"""


#[sync_reader]
#cluster = false            # set to true if source is a redis cluster
#address = "3.112.200.198:9993" # when cluster is true, set address to one of the cluster node
#username = ""              # keep empty if not using ACL
#password = ""              # keep empty if no authentication is required
#tls = false

 [scan_reader]
 cluster = false            # set to true if source is a redis cluster
 address = "3.112.200.198:9993" # when cluster is true, set address to one of the cluster node
 username = ""              # keep empty if not using ACL
 password = ""              # keep empty if no authentication is required
 ksn = true                # set to true to enabled Redis keyspace notifications (KSN) subscription
 tls = false

# [rdb_reader]
# filepath = "/mnt/c/Users/88693/Downloads/redis-db-0919-0001.rdb"

[redis_writer]
cluster = false            # set to true if target is a redis cluster
address = "172.27.68.222:6380" # when cluster is true, set address to one of the cluster node
username = ""              # keep empty if not using ACL
password = ""              # keep empty if no authentication is required
tls = false


[advanced]
dir = "data"
ncpu = 0        # runtime.GOMAXPROCS, 0 means use runtime.NumCPU() cpu cores
pprof_port = 0  # pprof port, 0 means disable
status_port = 0 # status port, 0 means disable

# log
log_file = "shake.log"
log_level = "info"     # debug, info or warn
log_interval = 5       # in seconds

# redis-shake gets key and value from rdb file, and uses RESTORE command to
# create the key in target redis. Redis RESTORE will return a "Target key name
# is busy" error when key already exists. You can use this configuration item
# to change the default behavior of restore:
# panic:   redis-shake will stop when meet "Target key name is busy" error.
# rewrite: redis-shake will replace the key with new value.
# ignore:  redis-shake will skip restore the key when meet "Target key name is busy" error.
rdb_restore_command_behavior = "rewrite" # panic, rewrite or skip

# redis-shake uses pipeline to improve sending performance.
# This item limits the maximum number of commands in a pipeline.
pipeline_count_limit = 1024

# Client query buffers accumulate new commands. They are limited to a fixed
# amount by default. This amount is normally 1gb.
target_redis_client_max_querybuf_len = 1024_000_000

# In the Redis protocol, bulk requests, that are, elements representing single
# strings, are normally limited to 512 mb.
target_redis_proto_max_bulk_len = 512_000_000

# If the source is Elasticache or MemoryDB, you can set this item.
aws_psync = "" # example: aws_psync = "10.0.0.1:6379@nmfu2sl5osync,10.0.0.1:6379@xhma21xfkssync"
